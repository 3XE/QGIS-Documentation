# 
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: QGIS Documentation\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-10-05 22:35\n"
"PO-Revision-Date: 2013-10-06 09:07+0000\n"
"Last-Translator: rduivenvoorde <richard@duif.net>\n"
"Language-Team: English (http://www.transifex.com/projects/p/qgis-documentation/language/en/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: en\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../source/docs/pyqgis_developer_cookbook/geometry.rst:11
msgid "Geometry Handling"
msgstr "Geometry Handling"

#: ../../source/docs/pyqgis_developer_cookbook/geometry.rst:13
msgid ""
"Points, linestrings and polygons that represent a spatial feature are "
"commonly referred to as geometries. In QGIS they are represented with the "
":class:`QgsGeometry` class. All possible geometry types are nicely shown in "
"`JTS discussion page "
"<http://www.vividsolutions.com/jts/discussion.htm#spatialDataModel>`_."
msgstr "Points, linestrings and polygons that represent a spatial feature are commonly referred to as geometries. In QGIS they are represented with the :class:`QgsGeometry` class. All possible geometry types are nicely shown in `JTS discussion page <http://www.vividsolutions.com/jts/discussion.htm#spatialDataModel>`_."

#: ../../source/docs/pyqgis_developer_cookbook/geometry.rst:18
msgid ""
"Sometimes one geometry is actually a collection of simple (single-part) "
"geometries. Such a geometry is called a multi-part geometry. If it contains "
"just one type of simple geometry, we call it multi-point, multi-linestring "
"or multi-polygon. For example, a country consisting of multiple islands can "
"be represented as a multi-polygon."
msgstr "Sometimes one geometry is actually a collection of simple (single-part) geometries. Such a geometry is called a multi-part geometry. If it contains just one type of simple geometry, we call it multi-point, multi-linestring or multi-polygon. For example, a country consisting of multiple islands can be represented as a multi-polygon."

#: ../../source/docs/pyqgis_developer_cookbook/geometry.rst:24
msgid ""
"The coordinates of geometries can be in any coordinate reference system "
"(CRS). When fetching features from a layer, associated geometries will have "
"coordinates in CRS of the layer."
msgstr "The coordinates of geometries can be in any coordinate reference system (CRS). When fetching features from a layer, associated geometries will have coordinates in CRS of the layer."

#: ../../source/docs/pyqgis_developer_cookbook/geometry.rst:31
msgid "Geometry Construction"
msgstr "Geometry Construction"

#: ../../source/docs/pyqgis_developer_cookbook/geometry.rst:33
msgid "There are several options for creating a geometry:"
msgstr "There are several options for creating a geometry:"

#: ../../source/docs/pyqgis_developer_cookbook/geometry.rst:35
msgid "from coordinates::"
msgstr "from coordinates::"

#: ../../source/docs/pyqgis_developer_cookbook/geometry.rst:42
msgid "Coordinates are given using :class:`QgsPoint` class."
msgstr "Coordinates are given using :class:`QgsPoint` class."

#: ../../source/docs/pyqgis_developer_cookbook/geometry.rst:44
msgid ""
"Polyline (Linestring) is represented by a list of points. Polygon is "
"represented by a list of linear rings (i.e. closed linestrings). First ring "
"is outer ring (boundary), optional subsequent rings are holes in the "
"polygon."
msgstr "Polyline (Linestring) is represented by a list of points. Polygon is represented by a list of linear rings (i.e. closed linestrings). First ring is outer ring (boundary), optional subsequent rings are holes in the polygon."

#: ../../source/docs/pyqgis_developer_cookbook/geometry.rst:48
msgid ""
"Multi-part geometries go one level further: multi-point is a list of points,"
" multi-linestring is a list of linestrings and multi-polygon is a list of "
"polygons."
msgstr "Multi-part geometries go one level further: multi-point is a list of points, multi-linestring is a list of linestrings and multi-polygon is a list of polygons."

#: ../../source/docs/pyqgis_developer_cookbook/geometry.rst:52
msgid "from well-known text (WKT)::"
msgstr "from well-known text (WKT)::"

#: ../../source/docs/pyqgis_developer_cookbook/geometry.rst:56
msgid "from well-known binary (WKB)::"
msgstr "from well-known binary (WKB)::"

#: ../../source/docs/pyqgis_developer_cookbook/geometry.rst:65
msgid "Access to Geometry"
msgstr "Access to Geometry"

#: ../../source/docs/pyqgis_developer_cookbook/geometry.rst:67
msgid ""
"First, you should find out geometry type, :func:`wkbType` method is the one "
"to use --- it returns a value from QGis.WkbType enumeration::"
msgstr "First, you should find out geometry type, :func:`wkbType` method is the one to use --- it returns a value from QGis.WkbType enumeration::"

#: ../../source/docs/pyqgis_developer_cookbook/geometry.rst:79
msgid ""
"As an alternative, one can use :func:`type` method which returns a value "
"from QGis.GeometryType enumeration. There is also a helper function "
":func:`isMultipart` to find out whether a geometry is multipart or not."
msgstr "As an alternative, one can use :func:`type` method which returns a value from QGis.GeometryType enumeration. There is also a helper function :func:`isMultipart` to find out whether a geometry is multipart or not."

#: ../../source/docs/pyqgis_developer_cookbook/geometry.rst:83
msgid ""
"To extract information from geometry there are accessor functions for every "
"vector type. How to use accessors::"
msgstr "To extract information from geometry there are accessor functions for every vector type. How to use accessors::"

#: ../../source/docs/pyqgis_developer_cookbook/geometry.rst:93
msgid ""
"Note: the tuples (x,y) are not real tuples, they are :class:`QgsPoint` "
"objects, the values are accessible with :func:`x` and :func:`y` methods."
msgstr "Note: the tuples (x,y) are not real tuples, they are :class:`QgsPoint` objects, the values are accessible with :func:`x` and :func:`y` methods."

#: ../../source/docs/pyqgis_developer_cookbook/geometry.rst:96
msgid ""
"For multipart geometries there are similar accessor functions: "
":func:`asMultiPoint`, :func:`asMultiPolyline`, :func:`asMultiPolygon()`."
msgstr "For multipart geometries there are similar accessor functions: :func:`asMultiPoint`, :func:`asMultiPolyline`, :func:`asMultiPolygon()`."

#: ../../source/docs/pyqgis_developer_cookbook/geometry.rst:102
msgid "Geometry Predicates and Operations"
msgstr "Geometry Predicates and Operations"

#: ../../source/docs/pyqgis_developer_cookbook/geometry.rst:104
msgid ""
"QGIS uses GEOS library for advanced geometry operations such as geometry "
"predicates (:func:`contains`, :func:`intersects`, ...) and set operations "
"(:func:`union`, :func:`difference`, ...). It can also compute geometric "
"properties of geometries, such as area (in the case of polygons) or lengths "
"(for polygons and lines)"
msgstr "QGIS uses GEOS library for advanced geometry operations such as geometry predicates (:func:`contains`, :func:`intersects`, ...) and set operations (:func:`union`, :func:`difference`, ...). It can also compute geometric properties of geometries, such as area (in the case of polygons) or lengths (for polygons and lines)"

#: ../../source/docs/pyqgis_developer_cookbook/geometry.rst:108
msgid ""
"Here you have a small example that combines iterating over the features in a"
" given layer and perfoming some geometric computations based on their "
"geometries."
msgstr "Here you have a small example that combines iterating over the features in a given layer and perfoming some geometric computations based on their geometries."

#: ../../source/docs/pyqgis_developer_cookbook/geometry.rst:120
msgid ""
"Areas and perimeters don't take CRS into account when computed using these "
"methods from the :class:`QgsGeometry` class. For a more powerful area and "
"distance calculation, the :class:`QgsDistanceArea` class can be used. If "
"projections are turned off, calculations will be planar, otherwise they'll "
"be done on the ellipsoid. When an ellipsoid is not set explicitly, WGS84 "
"parameters are used for calculations."
msgstr "Areas and perimeters don't take CRS into account when computed using these methods from the :class:`QgsGeometry` class. For a more powerful area and distance calculation, the :class:`QgsDistanceArea` class can be used. If projections are turned off, calculations will be planar, otherwise they'll be done on the ellipsoid. When an ellipsoid is not set explicitly, WGS84 parameters are used for calculations."

#: ../../source/docs/pyqgis_developer_cookbook/geometry.rst:129
msgid ""
"You can find many example of algorithms that are included in QGIS and use "
"these methods to analyze and transform vector data. Here are some links to "
"the code of a few of them."
msgstr "You can find many example of algorithms that are included in QGIS and use these methods to analyze and transform vector data. Here are some links to the code of a few of them."

#: ../../source/docs/pyqgis_developer_cookbook/geometry.rst:131
msgid ""
"Geometry transformation: `Reproject algorithm <https://raw.github.com/qgis"
"/Quantum-GIS/release-"
"2_0/python/plugins/processing/algs/ftools/ReprojectLayer.py>`_"
msgstr "Geometry transformation: `Reproject algorithm <https://raw.github.com/qgis/Quantum-GIS/release-2_0/python/plugins/processing/algs/ftools/ReprojectLayer.py>`_"

#: ../../source/docs/pyqgis_developer_cookbook/geometry.rst:132
msgid ""
"Distance and area using the :class:`QgsDistanceArea` class: `Distance matrix"
" algorithm <https://raw.github.com/qgis/Quantum-GIS/release-"
"2_0/python/plugins/processing/algs/ftools/PointDistance.py>`_"
msgstr "Distance and area using the :class:`QgsDistanceArea` class: `Distance matrix algorithm <https://raw.github.com/qgis/Quantum-GIS/release-2_0/python/plugins/processing/algs/ftools/PointDistance.py>`_"

#: ../../source/docs/pyqgis_developer_cookbook/geometry.rst:133
msgid ""
"`Multi-part to single-part algorithm <https://raw.github.com/qgis/Quantum-"
"GIS/release-"
"2_0/python/plugins/processing/algs/ftools/MultipartToSingleparts.py>`_"
msgstr "`Multi-part to single-part algorithm <https://raw.github.com/qgis/Quantum-GIS/release-2_0/python/plugins/processing/algs/ftools/MultipartToSingleparts.py>`_"

#: ../../source/docs/pyqgis_developer_cookbook/geometry.rst:5
#: ../../source/docs/pyqgis_developer_cookbook/geometry.rst:28
#: ../../source/docs/pyqgis_developer_cookbook/geometry.rst:62
#: ../../source/docs/pyqgis_developer_cookbook/geometry.rst:99
msgid "geometry"
msgstr "geometry"

#: ../../source/docs/pyqgis_developer_cookbook/geometry.rst:5
msgid "handling"
msgstr "handling"

#: ../../source/docs/pyqgis_developer_cookbook/geometry.rst:28
msgid "construction"
msgstr "construction"

#: ../../source/docs/pyqgis_developer_cookbook/geometry.rst:62
msgid "access to"
msgstr "access to"

#: ../../source/docs/pyqgis_developer_cookbook/geometry.rst:99
msgid "predicates and operations"
msgstr "predicates and operations"
