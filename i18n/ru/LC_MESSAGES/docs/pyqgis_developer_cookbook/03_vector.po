# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2012, QGIS project
# This file is distributed under the same license as the QGIS Documentation Project package.
# 
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: qgis-documentation\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2012-12-10 23:17\n"
"PO-Revision-Date: 2013-03-22 15:15+0000\n"
"Last-Translator: dassau <dassau@gbd-consult.de>\n"
"Language-Team: Russian (http://www.transifex.com/projects/p/qgis-documentation/language/ru/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"

# a18453f5c09d4cf689ae30d1105e862b
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:9
msgid "Using Vector Layers"
msgstr "Работа с векторными слоями"

# cbe6154fbc6d45df98d9b74540747e26
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:11
msgid ""
"This section summarizes various actions that can be done with vector layers."
msgstr "Этот раздел описывает различные действия, которые можно выполнять с векторными слоями."

# 91e763ace4c6445dbfb7a95303a17808
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:18
msgid "Iterating over Vector Layer"
msgstr "Обход объектов векторного слоя"

# dc3e16dea0f2428387575771bf9d7c48
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:20
msgid ""
"Below is an example how to go through the features of the layer. To read "
"features from layer, initialize the retieval with :func:`select` and then "
"use :func:`nextFeature` calls::"
msgstr "Ниже показано как выполнить обход всех объектов векторного слоя. Чтобы читать объекты слоя необходимо инициализировать процесс получения при помощи :func:`select` а потом последовательно вызывать :func:`nextFeature`::"

# 365f4d8f1559448abab6ca72a9fb2b00
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:64
msgid ""
":func:`select` gives you flexibility in what data will be fetched. It can "
"get 4 arguments, all of them are optional:"
msgstr ":func:`select` позволяет получать только необходимые данные. Функция может принимать 4 необязательных аргумента:"

# 0f60cd7400eb4fb5b085e0f57cd2be17
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:68
msgid "List of attributes which should be fetched. Default: empty list"
msgstr "Список атрибутов, которые нужно получать. По умолчанию: пустой список"

# 4ddbc18c80584afbb5f3f89e777ea655
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:70
msgid ""
"Spatial filter. If empty rect is given (:obj:`QgsRectangle()`), all features"
" are fetched. Default: empty rect"
msgstr "Пространственный фильтр. Если передается пустой прямоугольник (:obj:`QgsRectangle()`), запрашиваются все объекты. По умолчанию: пустой прямоугольник"

# b5f3f6fbc1cd42dca6a5fc5de08d0056
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:73
msgid ""
"Whether geometry of the feature should be fetched. Default: :const:`True`"
msgstr "Нужно ли запрашивать геометрию. По умолчанию: :const:`True`"

# 83c7ada0b4f046bdabcaee236e846a7b
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:75
msgid ""
"When using spatial filter, this argument says whether accurate test for "
"intersection should be done or whether test on bounding box suffices. This "
"is needed e.g. for feature identification or selection. Default: "
":const:`False`"
msgstr "При использовании пространственного фильтра определяет точность проверки на пересечение: будет ли использоваться точная проверка или достаточно проверки рамок. Это необходимо, например, при использовании функции определения или выбора. По умолчанию: :const:`False`"

# 68d3feb66b86478eba92df0f9d2b0ed6
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:80
msgid "Some examples::"
msgstr "Немного примеров::"

# b43e34ec92fc458b95af9b2fa8107aea
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:92
msgid ""
"To obtain field index from its name, use provider's :func:`fieldNameIndex` "
"function::"
msgstr "Для получения индекса поля по его имени используется функция провайдера данных :func:`fieldNameIndex`::"

# 3252f133732d4289a7057be96993c625
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:104
msgid "Modifying Vector Layers"
msgstr "Редактирование векторных слоёв"

# 5229e9941bb04a88b6a5e87fc2e92314
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:106
msgid ""
"Most vector data providers support editing of layer data. Sometimes they "
"support just a subset of possible editing actions. Use the "
":func:`capabilities` function to find out what set of functionality is "
"supported::"
msgstr "Большинство провайдеров векторных данных поддерживает редактирование. Иногда они позволяют выполнять только некоторые операции редактирования. Узнать список доступных действий можно при помощи функции :func:`capabilities`::"

# 535dbdef05da4e2aae3e0bebe166b11d
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:112
msgid ""
"By using any of following methods for vector layer editing, the changes are "
"directly committed to the underlying data store (a file, database etc). In "
"case you would like to do only temporary changes, skip to the next section "
"that explains how to do :ref:`modifications with editing buffer <editing-"
"buffer>`."
msgstr "При использовании любого из следующих методов редактирования слоя, изменения будут применяться к соответствующему набору данных (файлу, базе данных и т.д) сразу же. Если необходимо произвести временные изменения, следующий раздел\nможно пропустить и перейти сразу к разделу, описывающему :ref:`редактирование с использованием буфера изменений <editing-buffer>`."

# 10b3853c1e8142b1b3520a12147e7c73
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:118
msgid "Add Features"
msgstr "Добавление объектов"

# 200d28af72614903a339b467fcd72452
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:120
msgid ""
"Create some :class:`QgsFeature` instances and pass a list of them to "
"provider's :func:`addFeatures` method. It will return two values: result "
"(true/false) and list of added features (their ID is set by the data "
"store)::"
msgstr "Создайте несколько экземпляров :class:`QgsFeature` и передайте список этих объектов в метод :func:`addFeatures` провайдера. Провайдер вернет два значения: результат (true/false) и список добавленных объектов (из ID устанавливаются хранилищем данных)::"

# a1d3d9c8cca34503b317ff52141b1cd7
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:132
msgid "Delete Features"
msgstr "Удаление объектов"

# 2a10745c4dee4ef99fe0f5d5bb087f06
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:134
msgid "To delete some features, just provide a list of their feature IDs::"
msgstr "Для удаления объектов достатовно передать список идентификаторов этих объектов::"

# f79fba69825f4647b97c5e8966f2302b
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:140
msgid "Modify Features"
msgstr "Изменение объектов"

# c5a4bb3f474c426bb3f371e302e7ad2f
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:142
msgid ""
"It is possible to either change feature's geometry or to change some "
"attributes. The following example first changes values of attributes with "
"index 0 and 1, then it changes the feature's geometry::"
msgstr "Можно изменять как геометрию объекта так и его атрибуты. Следующий пример сначала изменяет значения атрибутов с индексами 0 и 1, а затем модифицирует геометрию объекта::"

# ab2f27b2763047158c68dd3b495049f7
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:157
msgid "Adding and Removing Fields"
msgstr "Добавление и удаление полей"

# f841e8d0d7e748da8a36558b2d7ac50c
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:159
msgid ""
"To add fields (attributes), you need to specify a list of field defnitions. "
"For deletion of fields just provide a list of field indexes. ::"
msgstr "Чтобы добавить поля (атрибуты), необходимо создать список с описанием полей. Для удаления необходимо предоставить список с индексами удаляемых полей. ::"

# 0c0259986eea47c09334d6bfafcdbac6
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:173
msgid "Modifying Vector Layers with an Editing Buffer"
msgstr "Редактирование векторных слоёв с использованием буфера изменений"

# d74051495c6a4271a736b490cd29da7f
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:175
msgid ""
"When editing vectors within QGIS application, you have to first start "
"editing mode for a particular layer, then do some modifications and finally "
"commit (or rollback) the changes. All the changes you do are not written "
"until you commit them --- they stay in layer's in-memory editing buffer. It "
"is possible to use this functionality also programmatically --- it is just "
"another method for vector layer editing that complements the direct usage of"
" data providers. Use this option when providing some GUI tools for vector "
"layer editing, since this will allow user to decide whether to "
"commit/rollback and allows the usage of undo/redo. When committing changes, "
"all changes from the editing buffer are saved to data provider."
msgstr "При редактировании векторных данных в QGIS, сначала необходимо перевести соответствущий слой в режим редактирования, затем внести изменения и, наконец, зафиксировать (или отменить) эти изменения. Все сделанные изменения не применяются до тех пор, пока вы их не зафиксируете --- они хранятся в буфере изменений слоя. Данную возможность можно использовать и программно --- это всего лишь другой способ редактирования векторных слоёв, дополняющий прямой доступ к провайдеру. Использовать этот функционал стоит тогда, когда пользователю предоставляются графические инструменты редактирования, чтобы он мог решить когда фиксировать/отменять изменения, а также мог использовать инструменты повтора/отмены. При фиксации изменений, все имеющиеся в буфере операции будут переданы провайдеру."

# 2e3f613a93314dab8f50aea3bc5d7710
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:186
msgid ""
"To find out whether a layer is in editing mode, use :func:`isEditing` --- "
"the editing functions work only when the editing mode is turned on. Usage of"
" editing functions::"
msgstr "Определить находится ли слой в режиме редактирования можно при помощи метода :func:`isEditing` --- функции редактирования работают только при активном режиме редактирования. Применение операций редактирования показано ниже::"

# 37b037232b174f6f9923dd07189e516e
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:205
msgid ""
"In order to make undo/redo work properly, the above mentioned calls have to "
"be wrapped into undo commands. (If you do not care about undo/redo and want "
"to have the changes stored immediately, then you will have easier work by "
":ref:`editing with data provider <editing>`.) How to use the undo "
"functionality ::"
msgstr "Чтобы операции повтора/отмены работали правильно, описанные выше вызовы должны быть помещены в пакет правок. (Если вам не нужна возможность повтора/отмены изменений и необходимо сохранять правки немедленно, все сводится к :ref:`редактированию через провайдер <editing>`.) Вот пример использования возможностей отмены правок::"

# 3b31da81830542619af1bf6e3dc53bee
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:223
msgid ""
"The :func:`beginEndCommand` will create an internal \"active\" command and "
"will record subsequent changes in vector layer. With the call to "
":func:`endEditCommand` the command is pushed onto the undo stack and the "
"user will be able to undo/redo it from GUI. In case something went wrong "
"while doing the changes, the :func:`destroyEditCommand` method will remove "
"the command and rollback all changes done while this command was active."
msgstr "Метод :func:`beginEndCommand` создаст внутреннюю \"активную\" команду и будет записывать все последующие изменения в векторном слое. При вызове :func:`endEditCommand` эта команда будет помещена в стек отмены и пользователь получит возможность отменить/повторить её из GUI. Если в процессе редактирования что-то пошло не так, вызов метода :func:`destroyEditCommand` удалит команду и отменит все изменения, сделанные с момента активации этой команды."

# bcbe338baaad4a9abc85f6c7fe2b06a0
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:230
msgid ""
"To start editing mode, there is :func:`startEditing` method, to stop editing"
" there are :func:`commitChanges` and :func:`rollback()` --- however normally"
" you should not need these methods and leave this functionality to be "
"triggered by the user."
msgstr "Для актививации режима редактирования используется метод :func:`startEditing`, за завершение редактирования отвечают :func:`commitChanges` и :func:`rollback()` --- однако в общем случае эти методы вам не нужны, т.к. вызываться они должны конечным пользователем."

# e869850734a1487e8060b9f5d2ff20a4
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:239
msgid "Using Spatial Index"
msgstr "Использование пространственного индекса"

# bf420a7d35ac43be8b966d396a81d0e5
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:242
msgid "Intro to spatial indexing"
msgstr ""

# f30837ad021046a1b0644ede033d033e
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:244
msgid "create spatial index --- the following code creates an empty index::"
msgstr "создание пространственного индекса --- следующий код создаёт пустой индекс::"

# ad8ba7d652e14e9d821f3825986d4bfb
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:248
msgid ""
"add features to index --- index takes :class:`QgsFeature` object and adds it"
" to the internal data structure. You can create the object manually or use "
"one from previous call to provider's :func:`nextFeature()` ::"
msgstr "добавление объектов к индексу --- индекс принимает объект :class:`QgsFeature` и добавляет его во внутреннюю структуру данных. Объект можно создать вручную или использовать полученные в результате предыдущих вызовов :func:`nextFeature()` ::"

# 7b666db4cc9243499925452890964b59
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:254
msgid ""
"once spatial index is filled with some values, you can do some queries::"
msgstr "после заполнения пространственного индекса значениями можно переходить к выполнению запросов::"

# f882c7f644db466189d32df1f15c4de7
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:266
msgid "Writing Vector Layers"
msgstr "Запись векторных слоёв"

# e2e4cf7ed5b24a738a4a2e28612ff727
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:268
msgid ""
"You can write vector layer files using :class:`QgsVectorFileWriter` class. "
"It supports any other kind of vector file that OGR supports (shapefiles, "
"GeoJSON, KML and others)."
msgstr "Для записи векторных данных на диск служит класс :class:`QgsVectorFileWriter`. Он позволяет создавать векторные файлы в любом, поддерживаемом OGR, формате (shape-файлы, GeoJSON, KML и другие)."

# 61e21ada40594282a48a9ba0bf2373a5
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:272
msgid "There are two possibilities how to export a vector layer:"
msgstr "Существует два способа записать векторные данные в файл:"

# 52473bc10fb5497f871a0a354ef8e8af
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:274
msgid "from an instance of :class:`QgsVectorLayer`::"
msgstr "из экземпляра :class:`QgsVectorLayer`::"

# 519a92fa0c26464a8d268c9e6959bca4
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:285
msgid ""
"Third parameter specifies output text encoding. Only some drivers need this "
"for correct operation - shapefiles are one of those --- however in case you "
"are not using international characters you do not have to care much about "
"the encoding. The fourth parameter that we left as None may specify "
"destination CRS --- if a valid instance of "
":class:`QgsCoordinateReferenceSystem` is passed, the layer is transformed to"
" that CRS."
msgstr "Третий параметр задает конечную кодировку текста. Он требуется некоторым драйверам (в частности драйверу shape-файлов) для нормальной работы. В случае если вы не используете международные символы, специально заботиться о правильной кодировке не нужно. Четвертый параметр, который мы оставили пустым, задает целевую систему координат --- если передан корректный экземпляр :class:`QgsCoordinateReferenceSystem`, слой будет трансформирован в этусистему координат."

# dc2e1830dd8a43e982f3a04e399d09f1
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:292
msgid ""
"For valid driver names please consult the `supported formats by OGR`_ --- "
"you should pass the value in \"Code\" column as the driver name. Optionally "
"you can set whether to export only selected features, pass further driver-"
"specific options for creation or tell the writer not to create attributes "
"--- look into the documentation for full syntax."
msgstr "Узнать правильные названия драйверов можно на странице `supported formats by OGR`_ --- в качестве имени драйвера используется значение колонки \"Code\". При необходимости можно экспортировать только выделенные объекты, передать дополнительные параметры драйверу или запретить сохранение атрибутов --- с полным синтаксисом можно ознакомиться в документации."

# 309d8d253b084985905a75a5cc3047a2
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:301
msgid "directly from features::"
msgstr "из отдельных объектов::"

# 21bf828add444a95a9e245231d4d7ded
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:332
msgid "Memory Provider"
msgstr "Memory провайдер"

# c6bf8ba5f62844c196a40853bb1d7a58
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:334
msgid ""
"Memory provider is intended to be used mainly by plugin or 3rd party app "
"developers. It does not store data on disk, allowing developers to use it as"
" a fast backend for some temporary layers."
msgstr "Memory провайдер в основном предназначен для использования разработчиками расширений или сторонних приложений. Этот провайдер не хранит данные на диске, что позволят разработчикам использовать его в качестве быстрого хранилища для временных слоёв."

# b5b11a4aa8eb49d8910f67eb0a96ed54
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:338
msgid "The provider supports string, int and double fields."
msgstr "Провайдер поддерживает строковые и целочисленные поля, а также поля с плавающей запятой."

# 55b497674fce49cc8756d99d0fb76302
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:340
msgid ""
"The memory provider also supports spatial indexing, which is enabled by "
"calling the provider's :func:`createSpatialIndex` function. Once the spatial"
" index is created you will be able to iterate over features within smaller "
"regions faster (since it's not necessary to traverse all the features, only "
"those in specified rectangle)."
msgstr "Memory провайдер помимо всего прочего поддерживает и пространственное индексирование, пространственный индекс можно создать вызовав функцию :func:`createSpatialIndex` провайдера. После создания пространственного индекса обход объектов в пределах небольшой области станет более быстрым (поскольку обращение будет идти только к объектам, попадающим в заданный прямоугольник)."

# 3896ab08f4c345d89b4ca9f1d85a04a7
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:346
msgid ""
"A memory provider is created by passing ``\"memory\"`` as the provider "
"string to the :class:`QgsVectorLayer` constructor."
msgstr "Memory провайдер будет использоваться если в качестве идентификатора провайдера при вызове конструктора :class:`QgsVectorLayer` указана строка ``\"memory\"``."

# 56917930eaf74cb78d62f0ced6675273
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:349
msgid ""
"The constructor also takes a URI defining the geometry type of the layer, "
"one of: ``\"Point\"``, ``\"LineString\"``, ``\"Polygon\"``, "
"``\"MultiPoint\"``, ``\"MultiLineString\"``, or ``\"MultiPolygon\"``."
msgstr "В конструктор также передается URI, описывающий геометрию слоя, это может быть: ``\"Point\"``, ``\"LineString\"``, ``\"Polygon\"``, ``\"MultiPoint\"``, ``\"MultiLineString\"`` или ``\"MultiPolygon\"``."

# 093c16cb2cf5484987920475c8fa8739
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:353
msgid ""
"From QGIS version 1.7 the URI can also specify the coordinate reference "
"system, fields, and indexing of the memory provider in the URI. The syntax "
"is:"
msgstr "Начиная с QGIS 1.7 URI также может содержать описание системы координат, описание полей и включать пространственное индексирование. Используется следующий синтаксис:"

# 291d3ac3d65d4ea29bff42dd9f7ab849
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:357
msgid ""
"Specifies the coordinate reference system, where definition may be any of "
"the forms accepted by :func:`QgsCoordinateReferenceSystem.createFromString`"
msgstr "Задает используемую систему координат, definition может принимать любой вид, совместимый с :func:`QgsCoordinateReferenceSystem.createFromString`"

# 6a316802102c40739f8aabf7189715da
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:361
msgid "Specifies that the provider will use a spatial index"
msgstr "Определяет будет ли провайдер использовать пространственный индекс"

# bca351cfee3c46cbaf702818a5f336c4
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:364
msgid ""
"Specifies an attribute of the layer.  The attribute has a name, and "
"optionally a type (integer, double, or string), length, and precision. There"
" may be multiple field definitions."
msgstr "Задает атрибуты слоя. Каждый атрибут имеет имя и, опционально, тип (целое число, вещественное число или строка), длину и точность. Таких описаний может быть несколько."

# ae3123ffd1054442afc360c5d0069e8d
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:368
msgid "The following example of a URI incorporates all these options::"
msgstr "Ниже показан пример URI, содержащий все описанные выше параметры::"

# b9097c62b0834b3d8f5903ac9ae141dd
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:372
msgid ""
"The following example code illustrates creating and populating a memory "
"provider::"
msgstr "Следующий пример кода показывает процесс создания и наполнения memory провайдера::"

# bd427be3d4474c0d9aecd0e6d2daba43
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:395
msgid "Finally, let's check whether everything went well::"
msgstr "И, наконец, проверим что всё прошло успешно::"

# ae2f7889bbc84eae8b66714aa7c5bac6
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:412
msgid "Appearance (Symbology) of Vector Layers"
msgstr "Внешний вид (символика) векторных слоёв"

# 147986ae3189408d8f2f94c9e9ae43b5
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:414
msgid ""
"When a vector layer is being rendered, the appearance of the data is given "
"by **renderer** and **symbols** associated with the layer.  Symbols are "
"classes which take care of drawing of visual representation of features, "
"while renderers determine what symbol will be used for a particular feature."
msgstr "При отрисовке векторного слоя, внешний вид данных определяется **рендером** и **символами**, ассоциированными со слоем. Символы это классы, занимающиеся отрисовкой визуального представления объектов, а рендер опеределяет какой\nсимвол будет использован для отдельного объекта."

# 39fe2873eccc49f5b6806ca8c274f3a3
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:419
msgid ""
"In QGIS v1,4 a new vector rendering stack has been introduced in order to "
"overcome the limitations of the original implementation. We refer to it as "
"new symbology or symbology-ng (new generation), the original rendering stack"
" is also called old symbology. Each vector layer uses either new symbology "
"or old symbology, but never both at once or neither of them. It's not a "
"global setting for all layers, so some layers might use new symbology while "
"others still use old symbology. In QGIS options the user can specify what "
"symbology should be used by default when layers are loaded.  The old "
"symbology will be kept in further QGIS v1.x releases for compatibility and "
"we plan to remove it in QGIS v2.0."
msgstr "В QGIS v1.4 был введен новый механизм отрисовки векторных слоев, призванный устранить ограничения оригинальной реализации. Мы называем его новой символикой или symbology-ng (new generation --- новое поколение), оригинальную реализацию также называют старой символикой. Каждый векторный слой использует либо новую либо старую символику, но нельзя использовать обе одновременно, или ни одну из них. Это не глобальная настройка для всех слоёв, то есть некоторые слои могут использовать новую символику, в то время как другие продолжают использовать старую. В настройках QGIS пользователь может указать какую символику необходимо использовать по умолчанию. Старая символика будет сохранена в будущих выпусках QGIS 1.x для совместимости, но мы планируем отказаться от неё в QGIS v2.0."

# ebaaa0489cd94cb58a65bc0cd5c6331d
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:430
msgid "How to find out which implementation is currently in use::"
msgstr "Узнать какая реализация используется можно так::"

# e64e7a73b3a840a086a0f175e0fea9ae
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:440
msgid ""
"Note: if you plan to support also earlier versions (i.e. QGIS < 1.4), you "
"should first check whether the :func:`isUsingRendererV2` method exists --- "
"if not, only old symbology is available::"
msgstr "Примечание: если требуется поддержка старых версий (например, QGIS < 1.4), вначале необходимо проверить существует ли метод :func:`isUsingRendererV2` --- если его нет, доступна только старая символика::"

# 9c4babba97114dde89546316bf9375d8
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:447
msgid ""
"We are going to focus primarily on new symbology because it has better "
"capabilities are more options for customization."
msgstr "В первую очередь и более подробно мы рассмотрим новую символику, так как она обладает большими возможностями и предоставляет больше настроек."

# 9a4adfaa4c88409c829a9fcbba63e9ce
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:453
msgid "New Symbology"
msgstr "Новая символика"

# eabb182abddc4fd3ae3d49c2291d65b1
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:455
msgid ""
"Now that we have a reference to a renderer from the previous section, let us"
" explore it a bit::"
msgstr "Теперь, имея ссылку на рендер из предыдущего раздела, изучим его поближе::"

# da89a6f4e13844fbb67e507348753927
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:460
msgid "There are several known renderer types available in QGIS core library:"
msgstr "В библиотеке ядра QGIS реализовано несколько рендеров:"

# e837754282454be6b4ccf8465ba1adf3
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:463
msgid "Type"
msgstr "Тип"

# be4a9f6bf7974d02ab77d1c7939bef93
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:463
msgid "Class"
msgstr "Класс"

# 5e8f5b5cd19a4ee38b75157fe0ae0089
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:463
msgid "Description"
msgstr "Описание"

# 9865e8effb0f4983aca3012ddf9c2614
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:465
msgid "singleSymbol"
msgstr ""

# b50e610e7ba34525bfcd6d63b39ad0a9
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:465
msgid ":class:`QgsSingleSymbolRendererV2`"
msgstr ""

# 60dd79a8c7d3448caf0c4a5a990bad4f
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:465
msgid "Renders all features with the same symbol"
msgstr "Отрисовывает все объекты одним и тем же символом"

# d6e292b8163c4a85bcae8189ae943aa8
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:466
msgid "categorizedSymbol"
msgstr ""

# 9f85a8bebd174fe6b2e547b65a774067
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:466
msgid ":class:`QgsCategorizedSymbolRendererV2`"
msgstr ""

# 28927a5071064bce9237f36f6ee42960
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:466
msgid "Renders features using a different symbol for each category"
msgstr "Отрисовывает объекты, используя разные символы для каждой категории"

# dca5860675054c2e9e40298c785e121d
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:467
msgid "graduatedSymbol"
msgstr ""

# aa018fb718cb435bab5e98898fed9476
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:467
msgid ":class:`QgsGraduatedSymbolRendererV2`"
msgstr ""

# f22d622ac4ef445692e43c8fa951b7de
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:467
msgid "Renders features using a different symbol for each range of values"
msgstr "Отрисовывает объекты, используя разные символы для каждого диапазона значений"

# 9cedb076e2bd4facb5cdb2a9bfbdd8e0
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:470
msgid ""
"There might be also some custom renderer types, so never make an assumption "
"there are just these types. You can query :class:`QgsRendererV2Registry` "
"singleton to find out currently available renderers."
msgstr "Кроме того, могут быть доступны пользовательские рендеры, поэтому не стоит предполагать, что присутствуют только вышеназванные типы. Узнать список доступных рендеров можно обратившись к синглтону :class:`QgsRendererV2Registry`."

# 66113298674b4f74800be67f9e0da645
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:474
msgid ""
"It is possible to obtain a dump of a renderer contents in text form --- can "
"be useful for debugging::"
msgstr "Существует возможность получить дамп содержимого рендера в текстовом виде, это может быть полезно при отладке::"

# 06e5faa912be436fab46ae795cc11ea7
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:482
msgid "Single Symbol Renderer"
msgstr "Рендер обычным знаком"

# 6beb4c7a759f45edaa855f291c5aaf92
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:484
msgid ""
"You can get the symbol used for rendering by calling :func:`symbol` method "
"and change it with :func:`setSymbol` method (note for C++ devs: the renderer"
" takes ownership of the symbol.)"
msgstr "Получить символ, используемый для отрисовки, можно вызвав метод :func:`symbol`, а для его изменения служит метод :func:`setSymbol` (примечание для пишущих на C++: рендер становится владельцем символа)."

# e958a7e8d259428d84ed31f8bed5dc23
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:491
msgid "Categorized Symbol Renderer"
msgstr "Рендер уникальными значениями"

# 42c634eacb934c9681da2db581c2294a
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:493
msgid ""
"You can query and set attribute name which is used for classification: use "
":func:`classAttribute` and :func:`setClassAttribute` methods."
msgstr "Узнать и задать поле атрибутивной таблицы, используемое для классификации можно при помощи методов :func:`classAttribute` и :func:`setClassAttribute` соответственно."

# 558e711fb7754833adf04fad08a8f716
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:496
msgid "To get a list of categories::"
msgstr "А так получаем список значений::"

# cc2f7edc6de54f999512453580536c50
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:501
msgid ""
"Where :func:`value` is the value used for discrimination between categories,"
" :func:`label` is a text used for category description and :func:`symbol` "
"method returns assigned symbol."
msgstr "Здесь :func:`value` --- величина, используемая для разделения категорий, :func:`label` --- описание категории, а метод :func:`symbol` возвращает назначеный символ."

# e1fe2b54edb44b08b1c307c62f2bd406
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:505
msgid ""
"The renderer usually stores also original symbol and color ramp which were "
"used for the classification: :func:`sourceColorRamp` and "
":func:`sourceSymbol` methods."
msgstr "Также рендер обычно сохраняет оригинальный символ и цветовую шкалу, которые использовались для классификации, получить их можно вызвав методы :func:`sourceColorRamp` и :func:`sourceSymbol` соответственно."

# f06d8a0365084bc9b321537e39bf2188
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:511
msgid "Graduated Symbol Renderer"
msgstr "Рендер градуированным знаком"

# c90d027437614cab87db3a4b0661331d
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:513
msgid ""
"This renderer is very similar to the categorized symbol renderer described "
"above, but instead of one attribute value per class it works with ranges of "
"values and thus can be used only with numerical attributes."
msgstr "Этот рендер очень похож на рендер уникальными значениями, описанный выше, но вместо одного значения атрибута для класса он оперирует диапазоном значений и следовательно, может использоваться только с числовыми атрибутами."

# 4e0fd963fa2b4ae9ae49d7b7ecf127a0
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:517
msgid "To find out more about ranges used in the renderer::"
msgstr "Получить информацию о диапазонах, используемых рендером::"

# b2fbdbe05e7c4d9e8a5f968f4826721a
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:527
msgid ""
"you can again use :func:`classAttribute` to find out classification "
"attribute name, :func:`sourceSymbol` and :func:`sourceColorRamp` methods.  "
"Additionally there is :func:`mode` method which determines how the ranges "
"were created: using equal intervals, quantiles or some other method."
msgstr "Как и в предыдущем случае, доступны методы :func:`classAttribute` для получения имени атрибута классификации, :func:`sourceSymbol` и :func:`sourceColorRamp` чтобы узнать оригинальный символ и цветовую шкалу. Кроме того, дополнительный метод :func:`mode` позволяет узнать какой алгоритм использовался для создания диапазонов: равные интервалы, квантили или что-то другое."

# 988d7843b1614a0db86216e4525d8c84
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:532
msgid ""
"If you wish to create your own graduated symbol renderer you can do so as "
"illustrated in the example snippet below (which creates a simple two class "
"arrangement)::"
msgstr "Если вы хотите создать свой рендер категориями, можете воспользоваться следующим фрагментом кода в качестве отправной точки. Пример ниже создает простое разделение объектов на два класса::"

# fe3b75ac5fbd4c2dba148a324b6b04e8
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:589
msgid "Working with Symbols"
msgstr "Работа с символами"

# ce0f0a3aee524a47a98ee56d6bf4a845
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:591
msgid ""
"For representation of symbols, there is :class:`QgsSymbolV2` base class with"
" three derived classes:"
msgstr "Символы представлены базовым классом :class:`QgsSymbolV2` и тремя классами наследниками:"

# bb291e84e16f4a2fbed5042cc59e3247
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:594
msgid ":class:`QgsMarkerSymbolV2` - for point features"
msgstr ":class:`QgsMarkerSymbolV2` --- для точечных объектов"

# 2232a3f742b547cd9300c4449ead9b71
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:595
msgid ":class:`QgsLineSymbolV2` - for line features"
msgstr ":class:`QgsLineSymbolV2` --- для линейных объектов"

# 5049155116f649e8964d1c86c2e5bf99
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:596
msgid ":class:`QgsFillSymbolV2` - for polygon features"
msgstr ":class:`QgsFillSymbolV2` - для полигональных объектов"

# 389fe87f10134d08b44cf3ee92459938
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:598
msgid ""
"**Every symbol consists of one or more symbol layers** (classes derived from"
" :class:`QgsSymbolLayerV2`). The symbol layers do the actual rendering, the "
"symbol class itself serves only as a container for the symbol layers."
msgstr "**Каждый символ состоит из одного и более символьных слоёв** (классы, унаследованные от :class:`QgsSymbolLayerV2`). Всю работу по отрисовке выполняют слои символа, а символ служит только контейнером для них."

# d57c420ac18f46f5bc6735efd6549bc6
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:602
msgid ""
"Having an instance of a symbol (e.g. from a renderer), it is possible to "
"explore it: :func:`type` method says whether it is a marker, line or fill "
"symbol. There is a :func:`dump` method which returns a brief description of "
"the symbol. To get a list of symbol layers::"
msgstr "Получив экземпляр символа (например, от рендера), можно заняться его изучением: метод :func:`type` расскажет является ли этот символ маркером, линией или заливкой. Метод :func:`dump` вернет краткое описание символа. А получить список слоёв символа можно так::"

# 173a713688ce43e087ba26839a93a81e
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:611
msgid ""
"To find out symbol's color use :func:`color` method and :func:`setColor` to "
"change its color. With marker symbols additionally you can query for the "
"symbol size and rotation with :func:`size` and :func:`angle` methods, for "
"line symbols there is :func:`width` method returning line width."
msgstr "Узнать цвет символа можно вызвав метод :func:`color`, а чтобы изменить его --- :func:`setColor`. У символов типа маркер присутствуют дополнительные методы :func:`size` и :func:`angle`, позволяющие узнать размер символа и угол поворота, а у линейных символов есть метод :func:`width`, возвращающий толщину линии."

# 1ccdb6437f89411c969ee566629a571f
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:616
msgid "Size and width are in millimeters by default, angles are in degrees."
msgstr "Размер и толщина по умолчанию задаются в миллиметрах, а углы --- в градусах."

# e2c3ce39347542e283f185b058a00797
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:621
msgid "Working with Symbol Layers"
msgstr "Работа со слоями символа"

# 04023eb5eceb42059a30ea63d6ae70c6
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:623
msgid ""
"As said before, symbol layers (subclasses of :class:`QgsSymbolLayerV2`) "
"determine the appearance of the features.  There are several basic symbol "
"layer classes for general use. It is possible to implement new symbol layer "
"types and thus arbitrarily customize how features will be rendered. The "
":func:`layerType` method uniquely identifies the symbol layer class --- the "
"basic and default ones are SimpleMarker, SimpleLine and SimpleFill symbol "
"layers types."
msgstr "Как уже было сказано, слои символа (наследники :class:`QgsSymbolLayerV2`) определяют внешний вид объектов. Существует несколько базовых классов символьных слоёв. Кроме того, можно создавать новые символьные слои и таким образом влиять на отрисовку объектов в достаточно широких пределах. Метод :func:`layerType` однозначно идентифицирует класс символьного слоя --- основными и доступными по умолчанию являются символьные слои SimpleMarker, SimpleLine и SimpleFill."

# cecb5b91ba9941f0867b7f495be4e3b7
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:630
msgid ""
"You can get a complete list of the types of symbol layers you can create for"
" a given symbol layer class like this::"
msgstr "Получить полный список символьных слоёв, которые можно использовать в заданном символьном слое, можно так::"

# c21e43da98f243f58eca52b66152c55e
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:639
msgid "Output::"
msgstr "Результат::"

# c8ed5649dbfd493789576d1cf528fe01
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:647
msgid ""
":class:`QgsSymbolLayerV2Registry` class manages a database of all available "
"symbol layer types."
msgstr "Класс :class:`QgsSymbolLayerV2Registry` управляет базой всех доступных символьных слоёв."

# 47ba10b5b1b44525a80de66d36a38038
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:650
msgid ""
"To access symbol layer data, use its :func:`properties` method that returns "
"a key-value dictionary of properties which determine the appearance. Each "
"symbol layer type has a specific set of properties that it uses. "
"Additionally, there are generic methods :func:`color`, :func:`size`, "
":func:`angle`, :func:`width` with their setter counterparts. Of course size "
"and angle is available only for marker symbol layers and width for line "
"symbol layers."
msgstr "Получить доступ к данным символьного слоя можно при помощи метода :func:`properties`, который возвращает словарь (пары ключ-значение) свойств, влияющих на внешний вид. Символьные слои каждого типа имеют свой набор свойств. Кроме того, существуют общие для всех типов методы :func:`color`, :func:`size`, :func:`angle`, :func:`width` и соответсвующие им сеттеры. Следует помнить, что размер и угол поворота доступны только для символьных слоёв типа маркер, а толщина --- только для слоёв типа линия."

# 1ec6d08d3b9d462eb3d2b7361bb07234
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:660
msgid "Creating Custom Symbol Layer Types"
msgstr "Создание пользовательских символьных слоёв"

# f9239033ac6b465783aa03071324920f
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:662
msgid ""
"Imagine you would like to customize the way how the data gets rendered. You "
"can create your own symbol layer class that will draw the features exactly "
"as you wish. Here is an example of a marker that draws red circles with "
"specified radius::"
msgstr "Представьте, что вам необходимо настроить процесс отрисовки своих данных. Для этого можно создать свой собственный класс символьного слоя, который будет рисовать объекты именно так, как вам нужно. Вот пример маркера, рисующего красные окружности заданного радиуса::"

# f9d8da0c4f624ee5b718cdfbc9fffc32
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:697
msgid ""
"The :func:`layerType` method determines the name of the symbol layer, it has"
" to be unique among all symbol layers. Properties are used for persistence "
"of attributes. :func:`clone` method must return a copy of the symbol layer "
"with all attributes being exactly the same. Finally there are rendering "
"methods: :func:`startRender` is called before rendering first feature, "
":func:`stopRender` when rendering is done. And :func:`renderPoint` method "
"which does the rendering. The coordinates of the point(s) are already "
"transformed to the output coordinates."
msgstr "Метод :func:`layerType` определяет имя символьного слоя, которое должно быть уникальным. Чтобы все атрибуты были неизменными, используются свойства. Метод :func:`clone` должен возвращать копию символьного слоя с точно такими\nже атрибутами. И наконец, методы отрисовки: :func:`startRender` вызывается перед отрисовкой первого объекта, а :func:`stopRender` --- после окончания отрисовки. За собственно отрисовку отвечает метод :func:`renderPoint`. Координаты точки (точек) должны быть трансформирваны в выходные координаты."

# 32658f84f03544c9a5c7bcbe4ecbeedc
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:706
msgid ""
"For polylines and polygons the only difference would be in the rendering "
"method: you would use :func:`renderPolyline` which receives a list of lines,"
" resp. :func:`renderPolygon` which receives list of points on outer ring as "
"a first parameter and a list of inner rings (or None) as a second parameter."
msgstr "Для полининий и полигонов единственное отличие будет в методе отрисовки: необходимо использовать :func:`renderPolyline`, принимающий список линий, или :func:`renderPolygon` в качестве первого аргумента принимающий\nсписок точек, образующих внешнее кольцо, и список внутренних колец (или None) вторым аргументом."

# 1f46da10af68431ead1ffb6b24fd7321
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:711
msgid ""
"Usually it is convenient to add a GUI for setting attributes of the symbol "
"layer type to allow users to customize the appearance: in case of our "
"example above we can let user set circle radius. The following code "
"implements such widget::"
msgstr "Хорошей практикой является создание интерфейса для управления атрибутами символьного слоя, что позволяет пользователям настраивать внешний вид: в случае нашего примера, можно предоставить пользователю возможность менять радиус окружности. Реализовать это можно так::"

# f03e73aa19de49f0a6822b8ea8809a54
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:744
msgid ""
"This widget can be embedded into the symbol properties dialog. When the "
"symbol layer type is selected in symbol properties dialog, it creates an "
"instance of the symbol layer and an instance of the symbol layer widget. "
"Then it calls :func:`setSymbolLayer` method to assign the symbol layer to "
"the widget. In that method the widget should update the UI to reflect the "
"attributes of the symbol layer. :func:`symbolLayer` function is used to "
"retrieve the symbol layer again by the properties dialog to use it for the "
"symbol."
msgstr "Этот виджет можно встроить в диалог свойств символа. Когда символьный слой выделяется в диалоге свойств символа, создается экземпляр символьного слоя и экземпляр виджета символьного слоя. Затем вызывается метод :func:`setSymbolLayer` чтобы привязать символьный слой к виджету. В этом методе виджет должен обновить интерфейс, чтобы отразить атрибуты символьного слоя. Функция :func:`symbolLayer` используется диалогом свойств для получения измененного символьного слоя для дальнейшего использования."

# 8f7604f7a9684924b7bb6b2a4a547cad
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:752
msgid ""
"On every change of attributes, the widget should emit :func:`changed()` "
"signal to let the properties dialog update the symbol preview."
msgstr "При каждом изменении атрибутов виджет должен посылать сигнал :func:`changed()`, чтобы диалог свойств мог обновить предпросмотр символа."

# b1ea3fd18d0b4d5c98ff2551703ab3ec
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:755
msgid ""
"Now we are missing only the final glue: to make QGIS aware of these new "
"classes. This is done by adding the symbol layer to registry. It is possible"
" to use the symbol layer also without adding it to the registry, but some "
"functionality will not work: e.g. loading of project files with the custom "
"symbol layers or inability to edit the layer's attributes in GUI."
msgstr "Остался последний штрих: рассказать QGIS о существовании этих новых классов. Для этого достаточно добавить символьный слой в реестр. Конечно, можно использовать символьный слой и не добавляя его в реестр, но тогда некоторые возможности будут недоступны: например, загрузка проекта с пользовательскими символьными слоями или невозможность редактировать свойства слоя."

# 961a91a1f165446a96189fcc4e42229e
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:761
msgid "We will have to create metadata for the symbol layer::"
msgstr "Сначала нужно создать метаданные символьного слоя::"

# 9278a1a0f5be40bea1ba4f91a9579a52
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:777
msgid ""
"You should pass layer type (the same as returned by the layer) and symbol "
"type (marker/line/fill) to the constructor of parent class. "
":func:`createSymbolLayer` takes care of creating an instance of symbol layer"
" with attributes specified in the `props` dictionary. (Beware, the keys are "
"QString instances, not \"str\" objects). And there is "
":func:`createSymbolLayerWidget` method which returns settings widget for "
"this symbol layer type."
msgstr "В конструктор родительского класса необходимо передать тип слоя (тот же, что сообщает слой) и тип символа (маркер/линия/заливка). :func:`createSymbolLayer` создаёт экземпляр символьного слоя с атрибутами, указаными в словаре `props`. (Будьте внимательны, ключи являются экземплярами QString, а не объектами \"str\"). Метод :func:`createSymbolLayerWidget` должен возвращать виджет настроек этого символьного слоя."

# cf6cb49d73694426aebbe5da3f59f8bd
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:784
msgid ""
"The last step is to add this symbol layer to the registry --- and we are "
"done."
msgstr "Последней конструкцией мы добавляем символьный слой в реестр --- на этом все."

# 451efb25ca0a4721b5f084f20ed9841d
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:790
msgid "Creating Custom Renderers"
msgstr "Создание пользовательских рендеров"

# 6f6b232f00f24ce0b508038d23ef2881
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:792
msgid ""
"It might be useful to create a new renderer implementation if you would like"
" to customize the rules how to select symbols for rendering of features. "
"Some use cases where you would want to do it: symbol is determined from a "
"combination of fields, size of symbols changes depending on current scale "
"etc."
msgstr "Возможность создать свой рендер может быть полезной, если требуется изменить правила выбора символов для отрисовки объектов. Примерами таких ситуаций могут быть: символ должен определяться на основании значений нескольких полей, размер символа должен зависеть от текущего масштаба и т.д."

# 2d7615d929544893b6e239d857918524
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:797
msgid ""
"The following code shows a simple custom renderer that creates two marker "
"symbols and chooses randomly one of them for every feature::"
msgstr "Следующий код демонстрирует простой пользовательский рендер, который создает два маркера и случаным образом выбирает один из них при отрисовке каждого объекта::"

# 2939e803f4374771bf9261ffd0514749
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:824
msgid ""
"The constructor of parent :class:`QgsFeatureRendererV2` class needs renderer"
" name (has to be unique among renderers). :func:`symbolForFeature` method is"
" the one that decides what symbol will be used for a particular feature. "
":func:`startRender` and :func:`stopRender` take care of "
"initialization/finalization of symbol rendering. :func:`usedAttributes` "
"method can return a list of field names that renderer expects to be present."
" Finally :func:`clone` function should return a copy of the renderer."
msgstr "В конструктор родительского класса :class:`QgsFeatureRendererV2` необходимо передать имя ренедера (должно быть уникальным). Метод :func:`symbolForFeature` определяет какой символ будет использоваться для конкретного объекта.\n:func:`startRender` и :func:`stopRender` выполняют инициализацию/финализацию отрисовки символа. Метод :func:`usedAttributes` может возвращать список имен полей, которые необходимы рендеру. И, наконец, функция :func:`clone` должна возвращать копию рендера."

# 559e4a3bd2ee43d4acaa446bb7dcdb98
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:832
msgid ""
"Like with symbol layers, it is possible to attach a GUI for configuration of"
" the renderer. It has to be derived from :class:`QgsRendererV2Widget`. The "
"following sample code creates a button that allows user to set symbol of the"
" first symbol::"
msgstr "Как и в случае символьных слоёв, рендер может иметь интерфейс для настройки параметров. Он наследуется от класса :class:`QgsRendererV2Widget`. Следующий код создает кнопку, позволяющую пользователю изменять один из символов::"

# 22ac25abdfec4869ab4ed278059dbddc
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:861
msgid ""
"The constructor receives instances of the active layer "
"(:class:`QgsVectorLayer`), the global style (:class:`QgsStyleV2`) and "
"current renderer. If there is no renderer or the renderer has different "
"type, it will be replaced with our new renderer, otherwise we will use the "
"current renderer (which has already the type we need). The widget contents "
"should be updated to show current state of the renderer. When the renderer "
"dialog is accepted, widget's :func:`renderer` method is called to get the "
"current renderer --- it will be assigned to the layer."
msgstr "В конструктор передается экземпляры активного слоя (:class:`QgsVectorLayer`), глобальный стиль (:class:`QgsStyleV2`) и текущий рендер. Если рендер не задан или имеет другой тип, он будет заменен нашим рендером, в противном случае мы будем использовать текущий рендер (который нам и нужен). Необходимо обновить содержимое виджета, чтобы отразить текущее состояние рендера. При закрытии диалога ренедера, вызывается метод :func:`renderer` виджета чтобы получить текущий рендер --- он будет назначен слою."

# 5f568f3cf165450eaa58d15ec0f7c926
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:870
msgid ""
"The last missing bit is the renderer metadata and registration in registry, "
"otherwise loading of layers with the renderer will not work and user will "
"not be able to select it from the list of renderers. Let us finish our "
"RandomRenderer example::"
msgstr "Осталось немного: метаданные рендера и его регистрация в реестре, иначе загрузить слои с этим рендером не получится, а пользователь не увидит его в списке доступных рендеров. Закончим наш пример с RandomRenderer::"

# 74d3a151b6a641279fe3790898a4c445
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:886
msgid ""
"Similarly as with symbol layers, abstract metadata constructor awaits "
"renderer name, name visible for users and optionally name of renderer's "
"icon. :func:`createRenderer` method passes :class:`QDomElement` instance "
"that can be used to restore renderer's state from DOM tree. "
":func:`createRendererWidget` method creates the configuration widget. It "
"does not have to be present or can return `None` if the renderer does not "
"come with GUI."
msgstr "Так же, как и в случае символьных слоёв, абстрактный конструктор метаданных должен получить имя рендера, отображаемое имя и, по желанию, название иконки рендера. Метод :func:`createRenderer` получает экземпляр :class:`QDomElement`, который может использоваться для восстановления состояния рендера из дерева DOM. Метод :func:`createRendererWidget` отвечает за создание виджета настройки. Он может отсутствовать или возвращать `None`, если рендер не имеет интрерфейса."

# ad82ea9ad5da4c52a1357db6ae4ab0ca
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:893
msgid ""
"To associate an icon with the renderer you can assign it in "
":class:`QgsRendererV2AbstractMetadata` constructor as a third (optional) "
"argument --- the base class constructor in the RandomRendererMetadata "
":func:`__init__` function becomes::"
msgstr "Назначить иконку рендеру можно передав её в конструктор :class:`QgsRendererV2AbstractMetadata` в качестве третьего (необязательного) аргумента --- конструктор базового класса в функции __init__ класса RandomRendererMetadata примет вид::"

# 3a75e62ed508473c95269b323402622b
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:903
msgid ""
"The icon can be associated also at any later time using :func:`setIcon` "
"method of the metadata class. The icon can be loaded from a file (as shown "
"above) or can be loaded from a `Qt resource "
"<http://qt.nokia.com/doc/4.5/resources.html>`_ (PyQt4 includes .qrc compiler"
" for Python)."
msgstr "Иконку можно назначить и позже, воспользовавшись методом :func:`setIcon` класса метаданных. Иконка может загружаться из файла (как показано выше) или из `ресурсов Qt <http://qt.nokia.com/doc/4.5/resources.html>`_ (в составе PyQt4 присутствует компилятор .qrc для Python)."

# c9194b0036c3493eafd47035fd48ea5a
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:909
msgid "Further Topics"
msgstr ""

# 9211522b921146a0b081221e47be8ddf
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:912
msgid "creating/modifying symbols"
msgstr ""

# 4060b31147744a00b387ceac37ab49c5
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:913
msgid "working with style (:class:`QgsStyleV2`)"
msgstr ""

# 190da2b1284d4c2cbfe77fb4fd659c54
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:914
msgid "working with color ramps (:class:`QgsVectorColorRampV2`)"
msgstr ""

# 54ac4bfab41d458d9a43638685caa394
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:915
msgid "rule-based renderer"
msgstr ""

# d5e6ae3e5b4e49a5a48ed4278e2d8f82
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:916
msgid "exploring symbol layer and renderer registries"
msgstr ""

# 7592e9933a8e4e81b639b59134ce9b3e
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:921
msgid "Old Symbology"
msgstr "Старая символика"

# 46bc056456c14b0881514648702482bd
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:923
msgid ""
"A symbol determines color, size and other properties of the feature. "
"Renderer associated with the layer decides what symbol will be used for "
"particular feature. There are four available renderers:"
msgstr "Знак определяет цвет, размер и другие свойства объекта. Рендер, ассоциированный со слоем, решает какой знак будет использован для определённого объекта. Всего доступно четыре рендера:"

# b34cc400c6054466be457103de51c423
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:927
msgid ""
"single symbol renderer (:class:`QgsSingleSymbolRenderer`) --- all features "
"are rendererd with the same symbol."
msgstr "обычный знак (:class:`QgsSingleSymbolRenderer`) --- все объекты отображаются одним и тем же знаком"

# 6d7d7b2ffd14497d8dacb241420865c2
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:929
msgid ""
"unique value renderer (:class:`QgsUniqueValueRenderer`) --- symbol for each "
"feature is choosen from attribute value."
msgstr "уникальное значение (:class:`QgsUniqueValueRenderer`) --- знак для каждого объекта выбирается на основании значения атрибута"

# 0b93e076b83942698f250c53e0f2586e
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:931
msgid ""
"graduated symbol renderer (:class:`QgsGraduatedSymbolRenderer`) --- a symbol"
" is applied to a subgroup (class) of features, which is calculated on a "
"numeric field"
msgstr "градуированный знак (:class:`QgsGraduatedSymbolRenderer`) --- знак применяется к группе (классу) объектов, разбиение на классы выполняется по числовому полю"

# f2a5e4e0e08941cf97e65b0d10b2e2fb
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:934
msgid "continuous color renderer (:class:`QgsContinuousSymbolRenderer`)"
msgstr "непрерывное значение (:class:`QgsContinuousSymbolRenderer`)"

# 2a319f1709e8416bb9a7a7a207910d5e
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:936
msgid "How to create a point symbol::"
msgstr "Создать точечный знак можно так::"

# 490a7c92e5f5468da60e0476a1cba885
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:946
msgid ""
"The :func:`setNamedPointSymbol` method determines the shape of the symbol. "
"There are two classes: hardcoded symbols (prefixed ``hard:``) and SVG "
"symbols (prefixed ``svg:``). The following hardcoded symbols are available: "
"``circle``, ``rectangle``, ``diamond``, ``pentagon``, ``cross``, ``cross2``,"
" ``triangle``, ``equilateral_triangle``, ``star``, ``regular_star``, "
"``arrow``."
msgstr "Метод :func:`setNamedPointSymbol` определяет фигуру, которая будет использоваться для знака. Существует два класса: встроенные символы (начинается с ``hard:``) и SVG символы (начинаются с ``svg:``). Доступны следующие встроенные символы: ``circle``, ``rectangle``, ``diamond``, ``pentagon``, ``cross``, ``cross2``, ``triangle``, ``equilateral_triangle``, ``star``, ``regular_star``, ``arrow``."

# 8e01b1f1c69143e1b79945a17a65948f
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:952
msgid "How to create an SVG symbol::"
msgstr "Для создания SVG знака выполните::"

# 7232576240f240f18034115a6a33b5d4
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:958
msgid "SVG symbols do not support setting colors, fill and line styles."
msgstr "SVG символы не поддерживают установку цвета, заливки и стиля линии."

# 1c7e94a6722e4d03bc4e81411e0b580d
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:960
msgid "How to create a line symbol::"
msgstr "Создание линейного знака::"

# 7ba591bee706483dbb378856235f6e0b
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:964
msgid "How to create a fill symbol::"
msgstr "Создание площадного знака::"

# fbf4e9f508594b3c919a8d58258040fc
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:968
msgid "Create a single symbol renderer::"
msgstr "Создание рендера обычным знаком::"

# 8d86e9d8e4c84d56a94496b8c7ace38c
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:973
msgid "Assign the renderer to a layer::"
msgstr "Назначение рендера слою::"

# 065e60cb5d6947ed9f30d370a9a2b797
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:977
msgid "Create unique value renderer::"
msgstr "Рендер уникальным значением::"

# 7c347074dbd04b04959d4d5d92bfb43a
#: ../../source/docs/pyqgis_developer_cookbook/03_vector.rst:981
msgid "Create graduated symbol renderer::"
msgstr "Рендер градуированным значением::"
