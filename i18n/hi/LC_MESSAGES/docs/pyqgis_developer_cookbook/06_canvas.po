# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2012, QGIS project
# This file is distributed under the same license as the QGIS Documentation Project package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QGIS Documentation Project 2.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-04-29 19:57\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/docs/pyqgis_developer_cookbook/06_canvas.rst:11
# 553f00d4c7e145e283465642ede1f8e7
msgid "Using Map Canvas"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/06_canvas.rst:13
# 95f7e24e9e884415b96139a480b8f709
msgid "The Map canvas widget is probably the most important widget within QGIS because it shows the map composed from overlaid map layers and allows interaction with the map and layers. The canvas shows always a part of the map defined by the current canvas extent. The interaction is done through the use of **map tools**: there are tools for panning, zooming, identifying layers, measuring, vector editing and others. Similar to other graphics programs, there is always one tool active and the user can switch between the available tools."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/06_canvas.rst:22
# eacd3024c5534fe2bb9c8e80f9a02b66
msgid "Map canvas is implemented as :class:`QgsMapCanvas` class in :mod:`qgis.gui` module.  The implementation is based on the Qt Graphics View framework. This framework generally provides a surface and a view where custom graphics items are placed and user can interact with them.  We will assume that you are familiar enough with Qt to understand the concepts of the graphics scene, view and items. If not, please make sure to read the `overview of the framework <http://doc.qt.nokia.com/graphicsview.html>`_."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/06_canvas.rst:30
# 24b1a906094c46b091a704d696112ba0
msgid "Whenever the map has been panned, zoomed in/out (or some other action triggers a refresh), the map is rendered again within the current extent. The layers are rendered to an image (using :class:`QgsMapRenderer` class) and that image is then displayed in the canvas. The graphics item (in terms of the Qt graphics view framework) responsible for showing the map is :class:`QgsMapCanvasMap` class. This class also controls refreshing of the rendered map. Besides this item which acts as a background, there may be more **map canvas items**. Typical map canvas items are rubber bands (used for measuring, vector editing etc.) or vertex markers. The canvas items are usually used to give some visual feedback for map tools, for example, when creating a new polygon, the map tool creates a rubber band canvas item that shows the current shape of the polygon. All map canvas items are subclasses of :class:`QgsMapCanvasItem` which adds some more functionality to the basic ``QGraphicsItem`` objects."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/06_canvas.rst:46
# 9e2063d823444e0ab9d2203d810fb7f9
msgid "To summarize, the map canvas architecture consists of three concepts:"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/06_canvas.rst:48
# e62a2445965c4124a7ab18c21edd720c
msgid "map canvas --- for viewing of the map"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/06_canvas.rst:49
# 841d378181d545f38b918d7964d01521
msgid "map canvas items --- additional items that can be displayed in map canvas"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/06_canvas.rst:50
# 009da297168d40a8b804bf4bcd6c5337
msgid "map tools --- for interaction with map canvas"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/06_canvas.rst:55
# fa5c264385064fd08548c8f264c053d1
msgid "Embedding Map Canvas"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/06_canvas.rst:57
# 2a22384c4eee4774acea36119c10a924
msgid "Map canvas is a widget like any other Qt widget, so using it is as simple as creating and showing it::"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/06_canvas.rst:63
# a1d61bf8fa5043978f11d4ff757aff19
msgid "This produces a standalone window with map canvas. It can be also embedded into an existing widget or window. When using .ui files and Qt Designer, place a ``QWidget`` on the form and promote it to a new class: set ``QgsMapCanvas`` as class name and set ``qgis.gui`` as header file. The ``pyuic4`` utility will take care of it. This is a very convenient way of embedding the canvas. The other possibility is to manually write the code to construct map canvas and other widgets (as children of a main window or dialog) and create a layout."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/06_canvas.rst:71
# 0aa1c2763e9b4cf7906b346b28d2e3a4
msgid "By default, map canvas has black background and does not use anti-aliasing. To set white background and enable anti-aliasing for smooth rendering::"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/06_canvas.rst:77
# 7289a4bfc81e409da18d387c149ccbfd
msgid "(In case you are wondering, ``Qt`` comes from ``PyQt4.QtCore`` module and ``Qt.white`` is one of the predefined ``QColor`` instances.)"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/06_canvas.rst:80
# a10c4671ac274878ab5c463543e53ca8
msgid "Now it is time to add some map layers. We will first open a layer and add it to the map layer registry.  Then we will set the canvas extent and set the list of layers for canvas::"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/06_canvas.rst:97
# 17161d8b3e174894bf8f23dcf1e9bdec
msgid "After executing these commands, the canvas should show the layer you have loaded."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/06_canvas.rst:102
# 467dcecba1ef4bf5a1ff852348ade945
msgid "Using Map Tools with Canvas"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/06_canvas.rst:104
# eebbd756425549c6a44bb0f0b3f186e6
msgid "The following example constructs a window that contains a map canvas and basic map tools for map panning and zooming.  Actions are created for activation of each tool: panning is done with :class:`QgsMapToolPan`, zooming in/out with a pair of :class:`QgsMapToolZoom` instances. The actions are set as checkable and later assigned to the tools to allow automatic handling of checked/unchecked state of the actions -- when a map tool gets activated, its action is marked as selected and the action of the previous map tool is deselected. The map tools are activated using :func:`setMapTool` method."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/06_canvas.rst:169
# 3113aa64bcdf4b2da2152b799ebefab1
msgid "You can put the above code to a file, e.g. ``mywnd.py`` and try it out in Python console within QGIS.  This code will put the currently selected layer into newly created canvas::"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/06_canvas.rst:177
# 493866b1812f47e58094bc0b93af5c43
msgid "Just make sure that the ``mywnd.py`` file is located within Python search path (``sys.path``). If it isn't, you can simply add it: ``sys.path.insert(0, '/my/path')`` --- otherwise the import statement will fail, not finding the module."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/06_canvas.rst:185
# 83d2dd04363c4658ac670ac671d77011
msgid "Rubber Bands and Vertex Markers"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/06_canvas.rst:187
# 92b3c6cd7da745db86a1890144e30e70
msgid "To show some additional data on top of the map in canvas, use map canvas items. It is possible to create custom canvas item classes (covered below), however there are two useful canvas item classes for convenience: :class:`QgsRubberBand` for drawing polylines or polygons, and :class:`QgsVertexMarker` for drawing points.  They both work with map coordinates, so the shape is moved/scaled automatically when the canvas is being panned or zoomed."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/06_canvas.rst:195
# 791539ccd10043a28b147c799c54e5c6
msgid "To show a polyline::"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/06_canvas.rst:201
# 672d569cae444a7bbee27ef2dbe6b67d
msgid "To show a polygon::"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/06_canvas.rst:207
# 6e22a549970849cba2432d86505af81e
msgid "Note that points for polygon is not a plain list: in fact, it is a list of rings containing linear rings of the polygon: first ring is the outer border, further (optional) rings correspond to holes in the polygon."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/06_canvas.rst:211
# adc2e0ef6c1a44d78cb2ff7ca0060016
msgid "Rubber bands allow some customization, namely to change their color and line width::"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/06_canvas.rst:217
# cefe797b463b4c54a5f9fb8f9852d9ba
msgid "The canvas items are bound to the canvas scene. To temporarily hide them (and show again, use the :func:`hide` and :func:`show` combo. To completely remove the item, you have to remove it from the scene of the canvas::"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/06_canvas.rst:223
# 0b9747676b5345a188f4c321a813c217
msgid "(in C++ it's possible to just delete the item, however in Python ``del r`` would just delete the reference and the object will still exist as it is owned by the canvas)"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/06_canvas.rst:227
# 51825a4470d84fb1a07eb7a191bb2df5
msgid "Rubber band can be also used for drawing points, however :class:`QgsVertexMarker` class is better suited for this (:class:`QgsRubberBand` would only draw a rectangle around the desired point). How to use the vertex marker::"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/06_canvas.rst:235
# 13a71e45926741c498a4602614ddf75e
msgid "This will draw a red cross on position [0,0]. It is possible to customize the icon type, size, color and pen width::"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/06_canvas.rst:243
# effaa0ca0a3542e2bd7974ec7fca9f13
msgid "For temprary hiding of vertex markers and removing them from canvas, the same applies as for the rubber bands."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/06_canvas.rst:249
# ad40603db903469998ebdbc93fca518b
msgid "Writing Custom Map Tools"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/06_canvas.rst:251
# c1356d2f2029495c9d874c556f4dc0dd
msgid "**TODO:** how to create a map tool"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/06_canvas.rst:256
# 2ab329eb0744428eb01b9bb3e565ed07
msgid "Writing Custom Map Canvas Items"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/06_canvas.rst:258
# 84c149ed7ee04baebf22624f7e9e4ca4
msgid "**TODO:** how to create a map canvas item"
msgstr ""

