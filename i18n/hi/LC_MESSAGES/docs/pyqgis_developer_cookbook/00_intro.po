# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2012, QGIS project
# This file is distributed under the same license as the QGIS Documentation Project package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QGIS Documentation Project 2.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-04-29 19:57\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/docs/pyqgis_developer_cookbook/00_intro.rst:9
# 14582521747b40e380362fce2cfe4af5
msgid "Introduction"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/00_intro.rst:11
# e6b36adac0a04336bc0f171526182dfa
msgid "This document is intended to work both as a tutorial and a reference guide. While it does not list all possible use cases, it should give a good overview of the principal functionality."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/00_intro.rst:15
# c7b403b3d74a439cba54ab3c3730315c
msgid "Starting from 0.9 release, QGIS has optional scripting support using Python language. We've decided for Python as it's one of the most favourite languages for scripting. PyQGIS bindings depend on SIP and PyQt4. The reason for using SIP instead of more widely used SWIG is that the whole QGIS code depends on Qt libraries. Python bindings for Qt (PyQt) are done also using SIP and this allows seamless integration of PyQGIS with PyQt."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/00_intro.rst:25
# a79331f0d9754cf0be2a0baccbe014ab
msgid "**TODO:**"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/00_intro.rst:24
# 8a25e343d1d74bc8a667530c7520a79c
msgid "Getting PyQGIS to work (Manual compilation, Troubleshooting)"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/00_intro.rst:27
# 6a80da5d206c449fabc61da5f5ee6926
msgid "There are several ways how to use QGIS python bindings, they are covered in detail in the following sections:"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/00_intro.rst:30
# 86e77a118c3f4295a9b854d15102dfad
msgid "issue commands in Python console within QGIS"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/00_intro.rst:31
# c91bb19ff9d34567876fda2ee5fc2d75
msgid "create and use plugins in Python"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/00_intro.rst:32
# 1d721704bb904425a21c5b48e5496a26
msgid "create custom applications based on QGIS API"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/00_intro.rst:36
# 32597cbfe430434f86718c306a5a6335
msgid "There is a `complete QGIS API <http://qgis.org/api/>`_ reference that documents the classes from the QGIS libraries. Pythonic QGIS API is nearly identical to the API in C++."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/00_intro.rst:40
# eb599f4de53c4c2ea46a69634922d72f
msgid "There are some resources about programming with PyQGIS on `QGIS blog <http://blog.qgis.org/>`_. See `QGIS tutorial ported to Python <http://blog.qgis.org/?q=node/59>`_ for some examples of simple 3rd party apps. A good resource when dealing with plugins is to download some plugins from `plugin repository <http://plugins.qgis.org/>`_ and examine their code."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/00_intro.rst:50
# 62c0e7b8231042cabbcfc4ea92a1bf60
msgid "Python Console"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/00_intro.rst:52
# 2941f146aa3649d6a0969e355ec7e2c1
msgid "For scripting, it is possible to take advantage of integrated Python console. It can be opened from menu: :menuselection:`Plugins --> Python Console`. The console opens as a non-modal utility window:"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/00_intro.rst:62
# 7bae1ab9772a4a098f7360dc306e292d
msgid "The screenshot above illustrates how to get the layer currntly selected in the layer list, show its ID and optionally, if it is a vector layer, show the feature count. For interaction with QGIS environment, there is :data:`qgis.utils.iface` variable, which is instance of :class:`QgisInterface`. This interface allows access to the map canvas, menus, toolbars and other parts of the QGIS application."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/00_intro.rst:69
# 6e29bcd92d284001a7a144e5c07cd0b7
msgid "For convenience of the user, the following statements are executed when the console is started (in future it will be possible to set further initial commands)::"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/00_intro.rst:76
# aab72bf0f7004077bd2607fab6a70582
msgid "For those which use the console often, it may be useful to set a shortcut for triggering the console (within menu :menuselection:`Settings --> Configure shortcuts...`)"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/00_intro.rst:83
# 33016a25abda4fe6a68ec89793fccaf1
msgid "Python Plugins"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/00_intro.rst:85
# 5cbf2d816ab5494d934c35bedcee3c13
msgid "Quantum GIS allows enhancement of its functionality using plugins. This was originally possible only with C++ language. With the addition of Python support to QGIS, it is also possible to use plugins written in Python. Great advantages over C++ plugins is the simplicity of distribution (no compiling for each platform needed) and easier development."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/00_intro.rst:91
# 8992f851f9a34c158b325baefb805d17
msgid "Many plugins covering various functionality have been written since the introduction of Python support. Plugin installer allows users to easily fetch, upgrade and remove Python plugins. See `Python Plugin Repositories <http://www.qgis.org/wiki/Python_Plugin_Repositories>`_ page for various sources of plugins."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/00_intro.rst:97
# a0fef8afa80841bea89d7e8c4373bc68
msgid "Creating plugins in Python is simple, see :ref:`developing_plugins` for detailed instructions."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/00_intro.rst:104
# b6364ae1274f4ed4987c252ea2f34ac4
msgid "Python Applications"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/00_intro.rst:106
# 7d4c4f68142649fd98cd48663e70dacb
msgid "Often when processing some GIS data, it is handy to create some scripts for automating the process instead of doing the same task again and again. With PyQGIS, this is perfectly possible --- import the :mod:`qgis.core` module, initialize it and you are ready for the processing."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/00_intro.rst:111
# ac1be8db27cd434992125198508f6f09
msgid "Or you may want to create an interactive application that uses some GIS functionality --- measure some data, export a map in PDF or any other functionality. The :mod:`qgis.gui` module additionally brings various GUI components, most notably the map canvas widget that can be very easily incorporated into the application with support for zooming, panning and/or any further custom map tools."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/00_intro.rst:120
# db43eb40b6464db281e59ecf7f36a0f3
msgid "Using PyQGIS in custom application"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/00_intro.rst:122
# 217150316e5249fc9d06592ac3b67fab
msgid "Note: do *not* use :file:`qgis.py` as a name for your test script --- Python will not be able to import the bindings as the script's name will shadow them."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/00_intro.rst:125
# 2faa32d9356a4fe3ab98ed19c49225b3
msgid "First of all you have to import qgis module, set QGIS path where to search for resources --- database of projections, providers etc. When you set prefix path with second argument set as :const:`True`, QGIS will initialize all paths with standard dir under the prefix directory. Calling :func:`initQgis` function is important to let QGIS search for the available providers."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/00_intro.rst:141
# 8ac3431f1f574e3e98683f52f266d782
msgid "Now you can work with QGIS API --- load layers and do some processing or fire up a GUI with a map canvas. The possibilities are endless :-)"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/00_intro.rst:144
# 404da7c347844892896b5b1dcf1272fd
msgid "When you are done with using QGIS library, call :func:`exitQgis` to make sure that everything is cleaned up (e.g. clear map layer registry and delete layers)::"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/00_intro.rst:154
# 060f1110a7b64ba5a708bb235f66eb92
msgid "Running Custom Applications"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/00_intro.rst:156
# c791d9a722054401a9fd73de7dcca9cf
msgid "You will need to tell your system where to search for QGIS libraries and appropriate Python modules if they are not in a well-known location --- otherwise Python will complain::"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/00_intro.rst:163
# 412897e37c6244edaa011779cbf1b3e3
msgid "This can be fixed by setting the ``PYTHONPATH`` environment variable. In the following commands, ``qgispath`` should be replaced with your actual QGIS installation path:"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/00_intro.rst:167
# 99308969acf94e5cb44fd36cab83109d
msgid "on Linux: :command:`export PYTHONPATH=/qgispath/share/qgis/python`"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/00_intro.rst:168
# 2dba134d1f0642c8851a797bfae7dabb
msgid "on Windows: :command:`set PYTHONPATH=c:\\\\qgispath\\\\python`"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/00_intro.rst:170
# eab5d6b0233240aaaba9fdc0ad006190
msgid "The path to the PyQGIS modules is now known, however they depend on ``qgis_core`` and ``qgis_gui`` libraries (the Python modules serve only as wrappers). Path to these libraries is typically unknown for the operating system, so you get an import error again (the message might vary depending on the system)::"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/00_intro.rst:178
# b8c1158aebd04211a0d09fd46d504d59
msgid "Fix this by adding the directories where the QGIS libraries reside to search path of the dynamic linker:"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/00_intro.rst:181
# 0263e5f562244d7a9e3642548fe629be
msgid "on Linux: :command:`export LD_LIBRARY_PATH=/qgispath/lib`"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/00_intro.rst:182
# 75eae4f90f1f48a7a53bf9e1b34a9840
msgid "on Windows: :command:`set PATH=C:\\\\qgispath;%PATH%`"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/00_intro.rst:184
# fa0df4a253794f14ba79a0786ced4b68
msgid "These commands can be put into a bootstrap script that will take care of the startup. When deploying custom applications using PyQGIS, there are usually two possibilities:"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/00_intro.rst:188
# 359c815026744b24ab95084adf73d4da
msgid "require user to install QGIS on his platform prior to installing your application. The application installer should look for default locations of QGIS libraries and allow user to set the path if not found. This approach has the advantage of being simpler, however it requires user to do more steps."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/00_intro.rst:194
# 14d6a2e6955e4ce192c3737c618d22ff
msgid "package QGIS together with your application. Releasing the application may be more challenging and the package will be larger, but the user will be saved from the burden of downloading and installing additional pieces of software."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/00_intro.rst:199
# 36e0bc19c1f84992ad7a3fc2e4607e1c
msgid "The two deployment models can be mixed - deploy standalone application on Windows and Mac OS X, for Linux leave the installation of QGIS up to user and his package manager."
msgstr ""

