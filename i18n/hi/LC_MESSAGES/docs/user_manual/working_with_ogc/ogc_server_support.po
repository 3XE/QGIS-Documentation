# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2012, QGIS project
# This file is distributed under the same license as the QGIS Documentation Project package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QGIS Documentation Project 2.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-04-29 19:57\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:12
# b81b2e66b9344a30b9b77253d58f10df
msgid "QGIS Server"
msgstr ""

#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:14
# 19b0a4b5961c499fb568c1866c847fac
msgid "QGIS Server is an open source WMS 1.3 and WFS 1.0.0 implementation which, in addition, implements advanced cartographic features for thematic mapping. The QGIS Server is a FastCGI/CGI (Common Gateway Interface) application written in C++ that works together with a webserver (e.g. Apache, Lighttpd). It is funded by the EU projects Orchestra, Sany and the city of Uster in Switzerland."
msgstr ""

#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:22
# c15118994cfb4d0ab04900bb9f039ab6
msgid "It uses QGIS as backend for the GIS logic and for map rendering. Furthermore the Qt library is used for graphics and for platform independent C++ programming. In contrast to other WMS software, the QGIS Server uses cartographic rules as a configuration language, both for the server configuration and for the user-defined cartographic rules."
msgstr ""

#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:30
# fc5c4992041d4e699620c0ba3e9b3b11
msgid "Moreover, the QGIS Server project provides the 'Publish to Web' plugin, a plugin for QGIS desktop which exports the current layers and symbology as a web project for QGIS Server (containing cartographic visualization rules expressed in SLD)."
msgstr ""

#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:34
# 4056527b5dc34ec8bd544bdbb7f764a8
msgid "As QGIS desktop and QGIS Server use the same visualization libraries, the maps that are published on the web look the same as in desktop GIS. The 'Publish to Web' plugin currently supports basic symbolization, with more complex cartographic visualization rules introduced manually. As the configuration is performed with the `SLD standard <http://www.opengeospatial.org/standards/sld>`_ and its documented extensions, there is only one standardised language to learn, which greatly simplifies the complexity of creating maps for the Web."
msgstr ""

#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:42
# 47c745e373da413f900b6480b71ec3a2
msgid "In one of the following manuals we will provide a sample configuration to set up a QGIS Server. But for now we recommend to read one of the following URLs to get more information:"
msgstr ""

#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:46
# c99b4574a8864a4d9de038cc3a8c47f9
msgid "http://karlinapp.ethz.ch/qgis_wms/"
msgstr ""

#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:47
# d03cf18b432a40828349283957bde07a
msgid "http://www.qgis.org/wiki/QGIS_mapserver_tutorial"
msgstr ""

#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:48
# 2c84caa365794ed9b3cc98e28237d1aa
msgid "http://linfiniti.com/2010/08/qgis-mapserver-a-wms-server-for-the-masses/"
msgstr ""

#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:53
# c1d4952a57d2480ebcb0c8a4c6d36b3b
msgid "Sample installation on Debian Squeeze"
msgstr ""

#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:55
# 1f102a6596174c9bb507ae732d821cd9
msgid "At this point we will give a short and simple sample installation howto for Debian Squeeze. Many other OS provide packages for QGIS Server, too. If you have to build it all from source, please refer to the URLs above."
msgstr ""

#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:59
# 2c10cff9bd5d498b90e8619d15fe9317
msgid "Apart from qgis and qgis-mapserver you need a webserver, in our case apache2. You can install all packages with aptitude or apt-get install together with other necessary dependency packages. After installation you should test, if the webserver and qgis server works as expected. Make sure the apache server is running with ``/etc/init.d/apache2 start``. Open a web browser and type URL: ``http://localhost``. If apache is up, you should see the message 'It works!'."
msgstr ""

#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:66
# b4d7f035cafd403e9d71d45203e58706
msgid "Now we test the qgis server installation. The :file:`qgis_mapserv.fcgi` is available at ``/usr/lib/cgi-bin/qgis_mapserv.fcgi`` and provides a standard wms that shows the state boundaries of Alaska. Add the WMS with the URL ``http://localhost/cgi-bin/qgis_mapserv.fcgi`` as described in :ref:`ogc-wms-servers`."
msgstr ""

#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:87
# 95ee1f9a3cb945759cf10a5718ba1156
msgid "Creating a WMS/WFS from a QGIS project"
msgstr ""

#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:89
# af33fd32f3e54a9ca2a78d672766c1a6
msgid "To provide a new qgis wms/wfs server we have to create a qgis project file with some data. Here we use the 'alaska' shapefile from the qgis_sample_dataset. Define the colors and styles of the layers in QGIS and define the project CRS, if not already done."
msgstr ""

#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:106
# ef0f71b22d654df890800290bfec659d
msgid "Then open the ``OWS Server`` tab in the menu :menuselection:`Settings --> Project Properties` and define the general fields under 'Service Capabilities'. For ``WMS Capabilities`` define 'Coordinate System Restrictions' and 'Advertised Extend'. Additionally you can enable the checkbox |checkbox| :guilabel:`Add WKT geometry to feature into response` to make the layers queryable and add a 'Maximum width' and height that can be requested. For ``WFS Capabilities`` you only need to select the layers that you want to provide as WFS. Now save the session in a project file :file:`alaska.qgs`. To provide the project as a WMS/WFS, we create a new folder ``/usr/lib/cgi-bin/project`` with admin privileges and add the project file :file:`alaska.qgs` and a copy of the :file:`qgis_mapserv.fcgi` file - that's all."
msgstr ""

#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:118
# a111be4c9874440291837a5fd9b07baa
msgid "Now we test our project WMS and WFS, add the WMS and WFS as described in :ref:`ogc-wms-layers` and :ref:`ogc-wfs` to QGIS and load the WMS. The URL is:"
msgstr ""

